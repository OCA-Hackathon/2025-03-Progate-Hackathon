import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
// import "@/app/config/AmplifyConf"
import Header from "@/app/components/navigation/Header";
import "./globals.css";
import ClientProvider from "@/app/config/amplify/ClientProvider";
import { configureAmplify } from "@/app/config/amplify/AmplifyConf";
import { AuthConfig } from "@/app/types/amplify/types";


const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const authConfig: AuthConfig = {
    userPoolId: process.env.COGNITO_USER_POOL_ID || "",
    userPoolClientId: process.env.COGNITO_USER_POOL_CLIENT_ID || "",
  };
  // console.log(authConfig);
  configureAmplify(authConfig);

  return (
    <html lang="ja">
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        <ClientProvider authConfig={authConfig}>
          <Header />
          {children}
        </ClientProvider>
      </body>
    </html>
  );
}
