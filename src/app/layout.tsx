import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import Header from "@/app/feature/header/components/Header";
import Footer from "@/app/feature/footer/Footer";
import "./globals.css";
import ClientProvider from "@/app/config/amplify/ClientProvider";
import { configureAmplify } from "@/app/config/amplify/AmplifyConf";
import { AuthConfig } from "@/app/types/amplify/types";
import { AuthProvider } from "@/app/config/amplify/AuthProvider";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const authConfig: AuthConfig = {
    userPoolId: process.env.HACKATHON_COGNITO_USER_POOL_ID || "",
    userPoolClientId: process.env.HACKATHON_COGNITO_USER_POOL_CLIENT_ID || "",
  };

  configureAmplify(authConfig);

  return (
    <html lang="ja">
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        <ClientProvider authConfig={authConfig}>
          <AuthProvider>
            <Header />
            {children}
          </AuthProvider>
          <Footer />
        </ClientProvider>
      </body>
    </html>
  );
}
